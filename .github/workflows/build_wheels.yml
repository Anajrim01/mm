name: Build wheels

on: [push, pull_request, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: py${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # cibuildwheel builds linux wheels inside a manylinux container
        # it also takes care of procuring the correct python version for us
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [38, 39, 310, 311]

    steps:
      - uses: actions/checkout@v3

      - uses: pypa/cibuildwheel@v2.11.3
        env:
          CIBW_BUILD: "cp${{ matrix.python-version}}-*"

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./wheelhouse/*.whl

  build_sdist:
    name: sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.9"
      - name: Run check-manifest
        run: |
          pip install check-manifest
          check-manifest -v
      - name: Build sdist
        run: |
          pip install --upgrade build
          python -m build --sdist
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./dist/*.tar.gz

  build_jni:
    name: jni on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            outdir: linux_64
          - os: windows-latest
            outdir: windows_64
          - os: macos-latest
            outdir: osx_64
    steps:
      - uses: actions/checkout@v3

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          # stable doesn't have --out-dir
          toolchain: nightly

      - name: Build
        working-directory: ./jni
        # TODO: 32bit vs 64bit?
        # https://github.com/scijava/native-lib-loader
        run: cargo build --release -Z unstable-options --out-dir ../build/natives/${{ env.outdir }}

      - uses: actions/upload-artifact@v3
        with:
          name: natives
          path: ./build/*

  build_java:
    name: java
    runs-on: ubuntu-latest
    needs: [build_jni]

    steps:
      - name: Load outputs
        uses: actions/download-artifact@v3
        with:
          name: natives
          path: natives

      - name: debug
        run: find natives
